name: Add PR to Project With Status

on:
  pull_request:
    types: [opened]

jobs:
  add-to-project:
    runs-on: ubuntu-latest
    steps:
      - name: Add PR to Project
        id: add_to_project
        run: |
          response=$(curl -s -X POST \
            -H "Authorization: Bearer $REPOSITORY_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
              "query": "mutation { addProjectV2ItemById(input: { projectId: \"${{ secrets.PROJECT_ID }}\", contentId: \"${{ github.event.pull_request.node_id }}\" }) { item { id } } }"
            }' \
            https://api.github.com/graphql
          )
          
          echo "GraphQL response: $response"
          item_id=$(echo "$response" | jq -r '.data.addProjectV2ItemById.item.id')
          echo "item_id from step: $item_id"
          echo "item_id=$item_id" >> $GITHUB_OUTPUT
        env:
          REPOSITORY_TOKEN: ${{ secrets.REPOSITORY_TOKEN }}

      - name: Update Project Status
        run: |
          curl -s -X POST \
            -H "Authorization: Bearer $REPOSITORY_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
              "query": "mutation { updateProjectV2ItemFieldValue(input: { projectId: \"${{ secrets.PROJECT_ID }}\", itemId: \"${{ steps.add_to_project.outputs.item_id }}\", fieldId: \"${{ secrets.FIELD_ID }}\", value: { singleSelectOptionId : \"${{ secrets.REVIEW_STATUS_ID }}\" } }) { clientMutationId } }"
            }' \
            https://api.github.com/graphql
        env:
          REPOSITORY_TOKEN: ${{ secrets.REPOSITORY_TOKEN }}
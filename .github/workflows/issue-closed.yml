name: Slack - Issue Closed

on:
  workflow_call:
    secrets:
      SLACK_WEBHOOK_URL:
        required: true
      REPOSITORY_TOKEN:
        required: true

jobs:
  send-slack:
    runs-on: ubuntu-latest

    steps:
      - name: Extract issue info and linked PRs
        id: issue-info
        env:
          REPOSITORY_TOKEN: ${{ secrets.REPOSITORY_TOKEN }}
        run: |
          REPO="${{ github.repository }}"
          REPO_OWNER=$(echo "$REPO" | cut -d'/' -f1)
          REPO_NAME=$(echo "$REPO" | cut -d'/' -f2)
          ISSUE_NUMBER=$(jq -r '.issue.number' "$GITHUB_EVENT_PATH")
          ISSUE_TITLE=$(jq -r '.issue.title' "$GITHUB_EVENT_PATH")
          ISSUE_URL=$(jq -r '.issue.html_url' "$GITHUB_EVENT_PATH")
          ISSUE_USER=$(jq -r '.issue.user.login' "$GITHUB_EVENT_PATH")
          ISSUE_USER_AVATAR=$(jq -r '.issue.user.avatar_url' "$GITHUB_EVENT_PATH")

          GRAPHQL_STRING='query($owner: String!, $name: String!, $number: Int!) {
            repository(owner: $owner, name: $name) {
              issue(number: $number) {
                timelineItems(itemTypes: [CONNECTED_EVENT], first: 100) {
                  nodes {
                    ... on ConnectedEvent {
                      subject {
                        ... on PullRequest {
                          number
                          title
                          url
                        }
                      }
                    }
                  }
                }
              }
            }
          }'

          GRAPHQL_QUERY=$(jq -n \
            --arg query "$GRAPHQL_STRING" \
            --arg owner "$REPO_OWNER" \
            --arg name "$REPO_NAME" \
            --argjson number "$ISSUE_NUMBER" \
            '{
              query: $query,
              variables: {
                owner: $owner,
                name: $name,
                number: $number
              }
            }'
          )

          RESPONSE=$(curl -s -X POST https://api.github.com/graphql \
            -H "Authorization: Bearer $REPOSITORY_TOKEN" \
            -H "Content-Type: application/json" \
            -d "$GRAPHQL_QUERY")

          ERROR_MESSAGE=$(echo "$RESPONSE" | jq -r '.errors[0].message // empty')
          if [ -n "$ERROR_MESSAGE" ]; then
            LINKED_PRS="‚ö†Ô∏è PR Ï°∞Ìöå Ï§ë Ïò§Î•ò Î∞úÏÉù: $ERROR_MESSAGE"
          else
            LINKED_PRS=$(echo "$RESPONSE" | jq -r '
              .data.repository.issue.timelineItems.nodes[]
              | select(.subject != null and .subject.number != null and .subject.title != null and .subject.url != null)
              | "- [#\(.subject.number)](\(.subject.url)) \(.subject.title)"'
            )

            if [ -z "$LINKED_PRS" ]; then
              LINKED_PRS="‚ùå Ïó∞Í≤∞Îêú PRÏù¥ ÏóÜÏäµÎãàÎã§!"
            fi
          fi

          HEADER_TEXT="üóëÔ∏è Ïù¥Ïäà Ï¢ÖÎ£å"

          ISSUE_SECTION="*[<${ISSUE_URL}|#${ISSUE_NUMBER}>]*
          ${ISSUE_TITLE}
          ${LINKED_PRS}"

          echo "header_text=$(printf "%s" "$HEADER_TEXT" | jq -Rs .)" >> $GITHUB_OUTPUT
          echo "issue_section=$(printf "%s" "$ISSUE_SECTION" | jq -Rs .)" >> $GITHUB_OUTPUT
          echo "issue_user=${ISSUE_USER}" >> $GITHUB_OUTPUT
          echo "issue_user_avatar=${ISSUE_USER_AVATAR}" >> $GITHUB_OUTPUT

      - name: Send Slack Notification
        uses: slackapi/slack-github-action@v2.1.1
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            blocks:
              - type: "header"
                text:
                  type: "plain_text"
                  text: ${{ steps.issue-info.outputs.header_text }}
                  emoji: true
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: ${{ steps.issue-info.outputs.issue_section }}
                accessory:
                  type: "image"
                  image_url: "${{ steps.issue-info.outputs.issue_user_avatar }}"
                  alt_text: "by ${{ steps.issue-info.outputs.issue_user }}"
              - type: "context"
                elements:
                  - type: "mrkdwn"
                    text: "by <https://github.com/${{ steps.issue-info.outputs.issue_user }}|${{ steps.issue-info.outputs.issue_user }}>"

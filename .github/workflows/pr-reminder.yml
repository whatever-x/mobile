name: Pull Request Reminder

on:
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

jobs:
  remind-review:
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Build Slack Payload Block
        id: build_payload
        env:
          GH_TOKEN: ${{ secrets.REPOSITORY_TOKEN }}
        run: |
          REPO="${{ github.repository }}"
          PRS=$(gh pr list --state open --json number,title,url,author,reviewRequests,reviews --repo "$REPO")
          echo "$PRS" > prs.json

          OPTIONS=""
          INITIAL_OPTIONS=""

          for row in $(jq -c '.[]' prs.json); do
            PR_NUM=$(echo "$row" | jq -r '.number')
            TITLE=$(echo "$row" | jq -r '.title')
            URL=$(echo "$row" | jq -r '.url')
            AUTHOR=$(echo "$row" | jq -r '.author.login')
            REVIEWERS=$(echo "$row" | jq -r '[.reviewRequests[].login] | join(", ")')
            REVIEWS=$(echo "$row" | jq -r '[.reviews[].state] | join(",")')

            AUTHOR_LINK="https://github.com/$AUTHOR"
            REVIEWER_LINKS=$(echo "$REVIEWERS" | awk -F, '{for(i=1;i<=NF;i++) printf "@<https://github.com/%s|%s> ", $i, $i}')

            if echo "$REVIEWS" | grep -q "APPROVED"; then
              TEXT="~<$URL|$TITLE #$PR_NUM>~"
            else
              TEXT="<$URL|$TITLE #$PR_NUM>"
            fi
            DESCRIPTION="- Î¶¨Î∑∞Ïñ¥ : $REVIEWER_LINKS
            - Îã¥ÎãπÏûê : @<${AUTHOR_LINK}|${AUTHOR}>"
  
            ITEM=$(cat <<EOF
- text:
    type: "mrkdwn"
    text: "$TEXT"
  description:
    type: "mrkdwn"
    text: "$DESCRIPTION"
  value: "pr-${PR_NUM}"
EOF
)
          
            OPTIONS="${OPTIONS}${ITEM}"$'\n'
          
            if echo "$REVIEWS" | grep -q "APPROVED"; then
              INITIAL_OPTIONS="${INITIAL_OPTIONS}${ITEM}"$'\n'
            fi
          done
          
          echo "options<<EOF" >> $GITHUB_OUTPUT
          echo -e "$OPTIONS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          echo "initial_options<<EOF" >> $GITHUB_OUTPUT
          echo -e "$INITIAL_OPTIONS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          if [ -z "$OPTIONS" ]; then
            echo "no_prs=true" >> $GITHUB_OUTPUT
          else
            echo "no_prs=false" >> $GITHUB_OUTPUT
          fi

      - name: Send Slack Notification
        if: steps.build_payload.outputs.no_prs == 'false'
        uses: slackapi/slack-github-action@v2.1.1
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            blocks:
              - type: "header"
                text:
                  type: "plain_text"
                  text: "‚è∞ Îç∞ÏùºÎ¶¨ PR Î¶¨Î∑∞ ÏïåÎ¶º"
                  emoji: true
              - type: "actions"
                elements:
                  - type: "checkboxes"
                    options: ${{ steps.build_payload.outputs.options }}
                    initial_options: ${{ steps.build_payload.outputs.initial_options }}

      - name: Send Slack Notification (no PRs)
        if: steps.build_payload.outputs.no_prs == 'true'
        uses: slackapi/slack-github-action@v2.1.1
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            blocks:
              - type: "header"
                text:
                  type: "plain_text"
                  text: "‚è∞ Îç∞ÏùºÎ¶¨ PR Î¶¨Î∑∞ ÏïåÎ¶º"
                  emoji: true
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "ÌòÑÏû¨ Ïò§ÌîàÎêú PRÏù¥ ÏóÜÏäµÎãàÎã§! üëè"

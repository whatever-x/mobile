name: Slack Notifier

on:
  issues:
    types: [opened, closed, commented]
  push:
  create:
    branches:
  delete:
    branches:
  pull_request:
    types: [opened, closed, review_requested, review_submitted, commented]

jobs:
  notify-slack:
    runs-on: ubuntu-latest

    steps:
      - name: Build Slack Message
        id: slack_message
        run: |
          EVENT_TYPE="${{ github.event_name }}"
          ACTION="${{ github.event.action }}"
          REPO="${{ github.repository }}"
          ACTOR="${{ github.actor }}"
          EVENT_URL="${{ github.event.issue.html_url || github.event.pull_request.html_url || github.event.repository.html_url }}"

          # Ïù¥Ïäà Í¥ÄÎ†®
          if [[ "$EVENT_TYPE" == "issues" ]]; then
            ISSUE_NUMBER="${{ github.event.issue.number }}"
            ISSUE_TITLE="${{ github.event.issue.title }}"

            if [[ "$ACTION" == "opened" ]]; then
              MESSAGE="üìå *Ïù¥Ïäà ÏÉùÏÑ±Îê®:* #$ISSUE_NUMBER - $ISSUE_TITLE"
            elif [[ "$ACTION" == "closed" ]]; then
              MESSAGE="‚úÖ *Ïù¥Ïäà Ï¢ÖÎ£åÎê®:* #$ISSUE_NUMBER - $ISSUE_TITLE"
            elif [[ "$ACTION" == "commented" ]]; then
              MESSAGE="üí¨ *Ïù¥Ïäà ÎåìÍ∏Ä ÏûëÏÑ±Îê®:* #$ISSUE_NUMBER - $ISSUE_TITLE"
            fi
          
          # Ïª§Î∞ã Ìë∏Ïãú Í¥ÄÎ†®
          elif [[ "$EVENT_TYPE" == "push" ]]; then
            COMMIT_COUNT="${{ github.event.commits | length }}"
            FIRST_COMMIT_MSG="${{ github.event.commits[0].message }}"
            BRANCH_NAME="${{ github.ref_name }}"

            MESSAGE="üöÄ *$BRANCH_NAME Î∏åÎûúÏπòÏóê ÏΩîÎìú Ìë∏ÏãúÎê®:* $COMMIT_COUNTÍ∞ú Ïª§Î∞ã - Ï≤´ Î©îÏãúÏßÄ: \"$FIRST_COMMIT_MSG\""
          
          # Î∏åÎûúÏπò ÏÉùÏÑ± Î∞è ÏÇ≠Ï†ú Í¥ÄÎ†®
          elif [[ "$EVENT_TYPE" == "create" ]]; then
            BRANCH_NAME="${{ github.ref_name }}"
            MESSAGE="üå± *ÏÉàÎ°úÏö¥ Î∏åÎûúÏπò ÏÉùÏÑ±Îê®:* $BRANCH_NAME by $ACTOR"
          
          elif [[ "$EVENT_TYPE" == "delete" ]]; then
            BRANCH_NAME="${{ github.ref_name }}"
            MESSAGE="üóëÔ∏è *Î∏åÎûúÏπò ÏÇ≠Ï†úÎê®:* $BRANCH_NAME by $ACTOR"
          
          # PR Í¥ÄÎ†®
          elif [[ "$EVENT_TYPE" == "pull_request" ]]; then
            PR_NUMBER="${{ github.event.pull_request.number }}"
            PR_TITLE="${{ github.event.pull_request.title }}"

            case "$ACTION" in
              "opened") MESSAGE="üîÉ *PR ÏÉùÏÑ±Îê®:* #$PR_NUMBER - $PR_TITLE";;
              "closed") MESSAGE="üö™ *PR Îã´Ìûò:* #$PR_NUMBER - $PR_TITLE";;
              "review_requested") MESSAGE="üëÄ *Î¶¨Î∑∞ ÏöîÏ≤≠Îê®:* #$PR_NUMBER - $PR_TITLE";;
              "review_submitted") MESSAGE="‚úÖ *Î¶¨Î∑∞ ÏôÑÎ£åÎê®:* #$PR_NUMBER - $PR_TITLE";;
              "commented") MESSAGE="üí¨ *PR ÎåìÍ∏Ä ÏûëÏÑ±Îê®:* #$PR_NUMBER - $PR_TITLE";;
            esac
          fi

          echo "MESSAGE=$MESSAGE" >> $GITHUB_ENV
          echo "EVENT_URL=$EVENT_URL" >> $GITHUB_ENV

      - name: Send Slack Notification
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "${{ env.MESSAGE }}",
              "attachments": [
                {
                  "fallback": "GitHub Ïù¥Î≤§Ìä∏ ÏïåÎ¶º",
                  "color": "#36a64f",
                  "fields": [
                    {
                      "title": "Repository",
                      "value": "${{ github.repository }}",
                      "short": true
                    },
                    {
                      "title": "Ïù¥Î≤§Ìä∏ URL",
                      "value": "<${{ env.EVENT_URL }}|üîó View Event>"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}